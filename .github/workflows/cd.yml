name: Continuous Delivery

on:
  push:
    tags: 'v*'  # push events to matching v*, i.e. v1.0, v20.15.10

env:
  PYTHON_DEFAULT_VERSION: 3.9
  GO_DEFAULT_VERSION: 1.15
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-pybindings:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, macos-10.15]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install dependencies
        working-directory: python-bindings
        run: |
          make deps
      - name: Build python bindings
        working-directory: python-bindings
        run: |
          make build
      - name: Upload python bindings
        uses: actions/upload-artifact@v2
        with:
          name: py-terraform-provider-b2-${{ runner.os }}
          path: python-bindings/dist/py-terraform-provider-b2
          if-no-files-found: error
          retention-days: 1
  build-and-deploy:
    needs: build-pybindings
    env:
      NOPYBINDINGS: 1  # do not build python buildings
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go ${{ env.GO_DEFAULT_VERSION }}
        uses: actions/setup-go@v2.1.3
        with:
          go-version: ${{ env.GO_DEFAULT_VERSION }}
      - name: Install dependencies
        run: |
          make deps
      - name: Download python bindings for all OSes
        uses: actions/download-artifact@v2
        with:
          path: python-bindings/dist/
      - name: Postprocess python bindings
        working-directory: python-bindings/dist
        run: |
          mv py-terraform-provider-b2-Linux/py-terraform-provider-b2 py-terraform-provider-b2-linux
          mv py-terraform-provider-b2-macOS/py-terraform-provider-b2 py-terraform-provider-b2-darwin
      - name: Import GPG key
        id: import_gpg
        uses: paultyng/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Release
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
